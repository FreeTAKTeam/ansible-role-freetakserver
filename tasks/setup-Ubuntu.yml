---
- name: Update apt
  shell: sudo apt update
  register: apt_update
  retries: 5
  ignore_errors: true
  changed_when: false
  until: apt_update is success

- name: Install
  apt:
    name: "python{{ python3_version }}"

- name: "Check if {{ pip3 }} is installed"
  stat:
    path: "/usr/local/bin/{{ pip3 }}"
  register: pip3_executable

- name: Download get-pip.py.
  get_url:
    url: "{{ pip_installer_url }}"
    dest: /tmp
    mode: 0644

- name: "Install {{ pip3 }}"
  command: "{{ python3 }} /tmp/get-pip.py"
  changed_when: false

- name: "Upgrade {{ pip3 }}"
  command: pip3 install --upgrade pip
  changed_when: false

- name: "Install {{ pip3 }} packages"
  pip:
    name: "{{ pip3_packages }}"
    executable: "{{ pip3 }}"

- name: Detect systemctl file
  stat:
    path: /usr/local/bin/systemctl
  register: systemctl_file

- name: Create systemctl backup
  copy:
    src: /usr/local/bin/systemctl
    dest: /usr/local/bin/systemctl.backup
    remote_src: true
  when: systemctl_file.stat.exists

- name: Use systemctl workaround
  get_url:
    url: https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl3.py
    dest: /usr/local/bin/systemctl
    mode: 0755

- name: Delete PyYAML
  shell: "{{ item }}"
  loop:
    - "rm -rf /usr/lib/python3/dist-packages/yaml"
    - "rm -rf /usr/lib/python3/dist-packages/PyYAML-*"
    - "rm -rf /usr/lib/python{{ python3_version }}/site-packages/PyYAML-*"

- name: Install apt dependencies
  apt:
    name: "{{ fts_apt_dependencies | list}}"

- name: "Install pip packages"
  pip:
    name: "{{ item }}"
    executable: "pip{{ python3_version }}"
  loop:
    - "{{ fts_pip_package_name }}"
    - "{{ fts_ui_pip_package_name }}"

- name: Install unzip
  apt:
    name: unzip
  register: install_unzip

- name: Get webmap release information with GitHub API
  uri:
    url: "{{ webmap_api_url }}"
    return_content: true
  register: webmap_response

- name: Set facts from GitHub API release information
  set_fact:
    webmap_download_url: "{{ webmap_response.json.assets[0].browser_download_url }}"
    webmap_raw_executable_name: "{{ webmap_response.json.name }}"

- name: Download webmap
  get_url:
    url: "{{ webmap_download_url }}"
    dest: "{{ webmap_package_location }}"
    owner: root
    group: root
    mode: 0755

- name: "Unarchive {{ webmap_package }} to /tmp"
  unarchive:
    src: "/tmp/{{ webmap_package }}"
    dest: /tmp
    owner: root
    group: root
    mode: 0755
    remote_src: true

- name: "Rename {{ webmap_raw_executable_name }} to {{ webmap_executable }}"
  copy:
    src: "/tmp/{{ webmap_raw_executable_name }}"
    dest: "/tmp/{{ webmap_executable }}"
    owner: root
    group: root
    mode: 0755
    remote_src: true

- name: "Copy {{ webmap_executable }} to {{ webmap_executable_location }}"
  copy:
    src: "/tmp/{{ webmap_executable }}"
    dest: "{{ webmap_executable_location }}"
    owner: root
    group: root
    mode: 0755
    remote_src: true
